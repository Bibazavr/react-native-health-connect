"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[644],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>f});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=n.createContext({}),p=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},l=function(e){var r=p(e.components);return n.createElement(c.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=p(t),d=i,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||s;return t?n.createElement(f,o(o({ref:r},l),{},{components:t})):n.createElement(f,o({ref:r},l))}));function f(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var s=t.length,o=new Array(s);o[0]=d;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a[u]="string"==typeof e?e:i,o[1]=a;for(var p=2;p<s;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3866:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var n=t(7462),i=(t(7294),t(3905));const s={sidebar_position:3,title:"requestPermission"},o="requestPermission",a={unversionedId:"api/requestPermission",id:"api/requestPermission",title:"requestPermission",description:"Request permission for specified record types and access types.",source:"@site/docs/api/requestPermission.md",sourceDirName:"api",slug:"/api/requestPermission",permalink:"/react-native-health-connect/docs/api/requestPermission",draft:!1,editUrl:"https://github.com/matinzd/react-native-health-connect/tree/main/docs/docs/api/requestPermission.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"requestPermission"},sidebar:"tutorialSidebar",previous:{title:"initialize",permalink:"/react-native-health-connect/docs/api/initialize"},next:{title:"revokeAllPermissions",permalink:"/react-native-health-connect/docs/api/revokeAllPermissions"}},c={},p=[],l={toc:p};function u(e){let{components:r,...t}=e;return(0,i.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"requestpermission"},(0,i.kt)("inlineCode",{parentName:"h1"},"requestPermission")),(0,i.kt)("p",null,"Request permission for specified record types and access types."),(0,i.kt)("h1",{id:"method"},"Method"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"requestPermission(permissions: Permission[], providerPackageName: string): Promise<Permission[]>\n")),(0,i.kt)("h1",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { requestPermission } from 'react-native-health-connect';\n\nconst requestPermissions = () => {\n  requestPermission([\n    {\n      accessType: 'read',\n      recordType: 'activeCaloriesBurned',\n    },\n    {\n      accessType: 'write',\n      recordType: 'activeCaloriesBurned',\n    },\n  ]).then((permissions) => {\n    console.log('Granted permissions ', { permissions });\n  });\n};\n")))}u.isMDXComponent=!0}}]);