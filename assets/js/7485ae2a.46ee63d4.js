"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[852],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,h=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var d=2;d<i;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2018:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:2,title:"Get started"},o=void 0,s={unversionedId:"get-started",id:"get-started",title:"Get started",description:"Requirements",source:"@site/docs/get-started.md",sourceDirName:".",slug:"/get-started",permalink:"/docs/get-started",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/get-started.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Get started"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/intro"},next:{title:"Permissions",permalink:"/docs/installation/permissions"}},l={},d=[{value:"Requirements",id:"requirements",level:2},{value:"Installation",id:"installation",level:2},{value:"Setting up permissions",id:"setting-up-permissions",level:2},{value:"Features",id:"features",level:2},{value:"Tips",id:"tips",level:2},{value:"License",id:"license",level:2}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://play.google.com/store/apps/details?id=com.google.android.apps.healthdata&hl=en&gl=US"},"Health Connect")," needs to be installed on the user's device, However the goal is to have this app preinstalled on Android devices in the future."),(0,a.kt)("li",{parentName:"ul"},"Health Connect API requires ",(0,a.kt)("inlineCode",{parentName:"li"},"mindSdkVersion=26")," (Android Oreo / 8.0).")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Health Connect does not appear on the Home screen by default. To open Health Connect, go to Settings > Apps > Health Connect, or add Health Connect to your Quick Settings menu.")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Health Connect requires the user to have screen lock enabled with a PIN, pattern, or password so that the health data being stored within Health connect is protected from malicious parties while the device is locked. Please go to Settings > Security > Screen lock to set a screen lock.")),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install react-native-health-connect by running:  ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add react-native-health-connect\n")),(0,a.kt)("p",null,"Since this module is Android-only, you do not need to run ",(0,a.kt)("inlineCode",{parentName:"p"},"pod install"),"."),(0,a.kt)("h2",{id:"setting-up-permissions"},"Setting up permissions"),(0,a.kt)("p",null,"To access health data from the Health Connect app in your own app, you need to add the necessary permissions and filters to the app manifest."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add the following code inside the activity tag in ",(0,a.kt)("inlineCode",{parentName:"li"},"AndroidManifest.xml"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="android/src/main/AndroidManifest.xml"',title:'"android/src/main/AndroidManifest.xml"'},'    <activity\n      android:name=".MainActivity"\n      android:label="@string/app_name"\n      android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|screenSize|smallestScreenSize|uiMode"\n      android:launchMode="singleTask"\n      android:windowSoftInputMode="adjustResize"\n      android:exported="true">\n      <intent-filter>\n          <action android:name="android.intent.action.MAIN" />\n          <category android:name="android.intent.category.LAUNCHER" />\n      </intent-filter>\n+     <intent-filter>\n+       <action android:name="androidx.health.ACTION_SHOW_PERMISSIONS_RATIONALE" />\n+     </intent-filter>\n+     <meta-data android:name="health_permissions" android:resource="@array/health_permissions" />\n    </activity>\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create a new values resource file at ",(0,a.kt)("inlineCode",{parentName:"li"},"/res/values/health_permissions.xml")," and add the necessary permissions:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="android/src/main/res/values/health_permissions"',title:'"android/src/main/res/values/health_permissions"'},'<?xml version="1.0" encoding="utf-8"?>\n<resources>\n  <array name="health_permissions">\n    <item>androidx.health.permission.HeartRate.READ</item>\n    <item>androidx.health.permission.HeartRate.WRITE</item>\n    <item>androidx.health.permission.Steps.READ</item>\n    <item>androidx.health.permission.Steps.WRITE</item>\n  </array>\n</resources>\n')),(0,a.kt)("h2",{id:"features"},"Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Typescript \u2705"),(0,a.kt)("li",{parentName:"ul"},"Supports both old and new architecture \u2705")),(0,a.kt)("h2",{id:"tips"},"Tips"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Keep in mind that this library is ",(0,a.kt)("strong",{parentName:"li"},"Android only"),"."),(0,a.kt)("li",{parentName:"ol"},"Health Connect is now currently on alpha version. Check ",(0,a.kt)("a",{parentName:"li",href:"https://developer.android.com/jetpack/androidx/releases/health-connect"},"here"),"."),(0,a.kt)("li",{parentName:"ol"},"If the user declines your permission request twice, your app is permanently locked out, and cannot request permissions again.")),(0,a.kt)("p",null,"Read more about health connect architecture ",(0,a.kt)("a",{parentName:"p",href:"https://developer.android.com/guide/health-and-fitness/health-connect/platform-overview/architecture"},"here"),"."),(0,a.kt)("h2",{id:"license"},"License"),(0,a.kt)("p",null,"MIT"))}p.isMDXComponent=!0}}]);